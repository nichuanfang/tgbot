name: deploy to dockerhub

on:
  push:
  workflow_dispatch:
  repository_dispatch:
    types: [update_cookie, update_server_id]

jobs:
  docker-build-tag-push:
    runs-on: ubuntu-latest
    name: Docker Build, Tag & Publish
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 拉取docker项目
      - name: checkout docker
        uses: actions/checkout@v2
        with:
          repository: 'nichuanfang/docker'
          token: ${{ secrets.GH_TOKEN }}
          path: 'docker'
          fetch-depth: 0

      # 设置python环境
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: pip

      # pip install
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      #  如果当前是repository_dispatch 则更新github action secrets
      - name: 更新nichuanfang/config-server的密钥TGBOT_TOKEN
        if: github.event_name == 'repository_dispatch'
        uses: jon-grey/github-actions-secrets-creator@v1
        with:
          location: nichuanfang/tgbot
          name: TGBOT_TOKEN
          value: ${{ github.event.client_payload.tgbot_token }}
          pa_token: ${{ secrets.GH_TOKEN }}

      # 同步tgbot_token设置hosts
      - name: Convert docker-compose file
        if: github.event_name != 'repository_dispatch'
        env:
          TGBOT_TOKEN: ${{ secrets.TGBOT_TOKEN }}
          ALIGO_TOKEN: ${{ secrets.ALIGO_TOKEN }}
        run: |
          python handle_docker.py $TGBOT_TOKEN

      # 同步tgbot_token设置hosts(更新cookie专用)   TGBOT_TOKEN密钥虽然更新 但 ${{ secrets.TGBOT_TOKEN }}取的还是旧值
      - name: Convert docker-compose file
        if: github.event_name == 'repository_dispatch'
        env:
          TGBOT_TOKEN_: ${{ github.event.client_payload.tgbot_token }}
          ALIGO_TOKEN: ${{ secrets.ALIGO_TOKEN }}
        run: |
          python handle_docker.py $TGBOT_TOKEN_

      # - name: Build, Tag & Publish Image to DockerHub
      #   uses: dinushchathurya/build-tag-push-action@v1.2.1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     context: .
      #     file: Dockerfile
      #     repoOwner: ${{ secrets.DOCKER_USERNAME }}
      #     repository: tgbot
      #     tag: latest

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/tgbot
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      # - # Add support for more platforms with QEMU (optional)
      #   # https://github.com/docker/setup-qemu-action
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: 更新docker项目
        uses: Smart-Transportation/push@v1.3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: 'master'
          author_email: 'github-actions[bot]@users.noreply.github.com'
          author_name: 'github-actions[bot]'
          message: '🐳 chore: 更新xray客户端配置文件'
          directory: ./docker
          repository: nichuanfang/docker

      - name: Push notification
        env:
          key: ${{ secrets.BARK_KEY }}
          host: ${{ vars.BARK_HOST }}
          title: 更新通知
          body: Tgbot%20has%20update
          sound: calypso
        run: |
          curl -L "${{env.host}}/${{env.key}}/${{env.title}}/${{env.body}}?sound=${{env.sound}}"
