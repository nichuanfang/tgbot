name: deploy to dockerhub

on:
  push:
    branches:
      - 'flask'

jobs:
  docker-build-tag-push:
    runs-on: ubuntu-latest
    name: Docker Build, Tag & Publish
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 拉取docker项目
      - name: checkout docker
        uses: actions/checkout@v2
        with:
          repository: 'nichuanfang/docker'
          token: ${{ secrets.GH_TOKEN }}
          path: 'docker'
          fetch-depth: 0

      # 设置python环境
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: pip

      # pip install
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # 同步tgbot_token设置hosts
      - name: Convert docker-compose file
        if: github.event_name != 'repository_dispatch'
        env:
          TGBOT_TOKEN: ${{ secrets.TGBOT_TOKEN }}
          WEBHOOK_HOST: ${{ secrets.WEBHOOK_HOST }}
        run: |
          python handle_docker.py $TGBOT_TOKEN $WEBHOOK_HOST

      - name: Build, Tag & Publish Image to DockerHub
        uses: dinushchathurya/build-tag-push-action@v1.2.1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: .
          file: Dockerfile
          repoOwner: ${{ secrets.DOCKER_USERNAME }}
          repository: tgbot
          tag: latest

      - name: 更新docker项目
        uses: Smart-Transportation/push@v1.3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: 'master'
          author_email: 'github-actions[bot]@users.noreply.github.com'
          author_name: 'github-actions[bot]'
          message: '🐳 chore: 更新xray客户端配置文件'
          directory: ./docker
          repository: nichuanfang/docker

      - name: Push notification
        env:
          key: ${{ secrets.BARK_KEY }}
          host: ${{ vars.BARK_HOST }}
          title: 更新通知
          body: Tgbot%20has%20update
          sound: calypso
        run: |
          curl -L "${{env.host}}/${{env.key}}/${{env.title}}/${{env.body}}?sound=${{env.sound}}"
